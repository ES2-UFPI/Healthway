# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: DEV - Start & Test (API)

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Create .env file
      working-directory: backend
      run: |
        echo "TYPE=${{ secrets.TYPE }}" > .env
        echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
        echo "PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }}" >> .env
        echo 'PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}"' >> .env
        echo "CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }}" >> .env
        echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
        echo "AUTH_URI=${{ secrets.AUTH_URI }}" >> .env
        echo "TOKEN_URI=${{ secrets.TOKEN_URI }}" >> .env
        echo "AUTH_PROVIDER_X509_CERT_URL=${{ secrets.AUTH_PROVIDER_X509_CERT_URL }}" >> .env
        echo "CLIENT_X509_CERT_URL=${{ secrets.CLIENT_X509_CERT_URL }}" >> .env
        echo "UNIVERSE_DOMAIN=${{ secrets.UNIVERSE_DOMAIN }}" >> .env
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    - run: npm ci
      working-directory: backend
    - name: Start server
      working-directory: backend
      run: |
        npm start &
        SERVER_PID=$!
        sleep 6
        kill $SERVER_PID
    - name: Run tests
      working-directory: backend
      run: npm test
